package de.NDN.app.globalObjects;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URLDecoder;

public class AppFont {
	
	private String name;
	
	public AppFont(String appFontName) {
		this.name = appFontName;
		
		String path;
		Font font = null;
		try {				
			arial_std_path = URLDecoder.decode( ((String) (de.NDN.app.NDN_Rechnungsprogramm.class.getResource("").toExternalForm() + "fonts/ARIAL_STD.ttf")).replace("file:/", ""), "UTF-8");
			arial_bld_path = URLDecoder.decode( ((String) (de.NDN.app.NDN_Rechnungsprogramm.class.getResource("").toExternalForm() + "fonts/ARIAL_BLD.ttf")).replace("file:/", ""), "UTF-8");
			arial_it_path = URLDecoder.decode( ((String) (de.NDN.app.NDN_Rechnungsprogramm.class.getResource("").toExternalForm() + "fonts/ARIAL_IT.ttf")).replace("file:/", ""), "UTF-8");
			ARIAL_STD = Font.createFont(Font.TRUETYPE_FONT, new FileInputStream( arial_std_path ));
			ARIAL_BLD = Font.createFont(Font.TRUETYPE_FONT, new FileInputStream( arial_bld_path ));
			ARIAL_IT = Font.createFont(Font.TRUETYPE_FONT, new FileInputStream( arial_it_path ));
			
		} catch (FileNotFoundException e1) {
			e1.printStackTrace();
		} catch (FontFormatException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
	}

}
