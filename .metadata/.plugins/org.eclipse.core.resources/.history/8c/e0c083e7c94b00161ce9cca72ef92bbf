package de.NDN.app.writeInvoice;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.concurrent.Worker;
import javafx.concurrent.Worker.State;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import netscape.javascript.JSObject;

public class WriteInvoiceModel {
	
	private WriteInvoiceStage wInvS;
	private WriteInvoiceController wInvC;
	private WriteInvoiceView wInvV;
	private WebView browser;
	private WebEngine engine;
	
	private int viewPageZoom = 200;
	
	public WriteInvoiceModel() {		
		
	}
	
	public void initWriteInvoice() {
		this.wInvS = new WriteInvoiceStage(this);
		this.browser = this.wInvS.getBrowser();
		
      	this.wInvC = new WriteInvoiceController(this.browser, this.engine);
      	this.wInvV = new WriteInvoiceView(this.browser, this.engine);
      	
      	this.engine = this.browser.getEngine();
      	String url = getClass().getResource("").toExternalForm() + "writeInvoice.html";
      	this.engine.getLoadWorker().stateProperty().addListener(
				new ChangeListener<State>() {
					public void changed(ObservableValue<? extends Worker.State> ov, State oldState, State newState) {
						JSObject window = (JSObject) engine.executeScript("window");
						window.setMember("docL", this);
						if(newState == State.SUCCEEDED) {							
							window.setMember("app", this);
						}
						
					}
				});
		this.engine.load(url);
      	
      	wInvS.show();
	}
	
	public void setDefaults() {
		setViewPageZoom(this.viewPageZoom);
	}
	
	public int getViewPageZoom() {
		return viewPageZoom;
	}

	public void setViewPageZoom(int viewPageZoom) {
		this.viewPageZoom = viewPageZoom;
		this.wInvV.changeViewPageZoom(viewPageZoom);
	}
	

}
